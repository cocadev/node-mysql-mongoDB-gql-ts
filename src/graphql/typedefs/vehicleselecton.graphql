type Vehicleselecton {
    id: ID!
    common: Common
    typeAorB: String
    vehicleTypeId: List
    description: String
    fuelTypeId: List
    fuelPrice: Float
    fuelConsumption: Int
    acquisitionValue: Int
    maintenanceCost: Int
    insuranceCost: Int
    tyresCost: Int
    repairsCost: Int
    numOfBreakdowns: Int
    avgBreakdownCost: Int
    roadTaxes: Int
    disposalMethod: List
    disposalValue: Int
    createdAt: String
    updatedAt: String
}

type Query {
    allVehicleSelectons(filter: FilterData): [Vehicleselecton]
    _allVehicleSelectonsMeta: Count
    _createdEachMonthVehicleSelectonsMeta: CountMonth
    _createdEachWeekVehicleSelectonsMeta: CountWeek
    _createdEachDayVehicleSelectonsMeta: CountDay
}

type Common {
    userId: Int
    datasetId: DataSet
    workingDays: Int
    dailyMileage: Int
    tyresMileage: Int
    adminCosts: Int
    laborCosts: Int
    depreciationPeriod: Int
}